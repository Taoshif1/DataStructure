
#include <stdio.h>
#include <stdlib.h>
#define MAX 10  

int stack_arr[MAX];
int top = -1;

int isFull() {
    if (top == MAX - 1) {
        return 1;
    } else {
        return 0; 
    }
}

int isEmpty() {
    if (top == -1) {
        return 1;
    } else {
        return 0;
    }
}

void push(int data) {
    if (isFull()) {
        printf("Stack Overflow!!\n");
        return;
    }
    top = top + 1;
    stack_arr[top] = data;
}

int pop() {
    int value;
    if (isEmpty()) {
        printf("Stack Underflow!!\n");
        exit(1); // Termination with failure (abnormal termination)
    }
    value = stack_arr[top];
    top = top - 1;
    return value;
}

int peek() {
    if (isEmpty()) {
        printf("Stack Underflow!!\n");
        exit(1); // Termination with failure (abnormal termination)
    }
    return stack_arr[top];
}

void print() {
    int i;
    if (top == -1) {
        printf("Stack underflow\n");
        return;
    }
    printf("Pushed items: ");
    for (i = top; i >= 0; i--) {
        printf("%d ", stack_arr[i]);
    }
    printf("\n"); //
}

int main() {
    int choice, data;
    while (1) {
        printf("\n");
        printf("1. Push\n");
        printf("2. Pop\n");
        printf("3. Print the top element\n");
        printf("4. Print all the elements of the stack\n");
        printf("5. Quit\n");
        printf("\nPlease enter your choice: \n");
        scanf("%d", &choice);

        switch (choice) {
        case 1:
            printf("Enter the element to be pushed: ");
            scanf("%d", &data);
            push(data);
            break;

        case 2:
            data = pop();
            printf("Deleted element is %d\n", data);
            break;

        case 3:
            printf("Topmost element of the stack is %d\n", peek());
            break;

        case 4:
            print();
            break;

        case 5:
            return 0;
            break;

        default:
            printf("Wrong Choice!!\nPlease choose from 1-5\n");
        }
    }
    return 0;
}
